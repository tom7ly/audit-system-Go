// Code generated by ent, DO NOT EDIT.

package ent

import (
	"audit-system/ent/account"
	"audit-system/ent/auditlog"
	"audit-system/ent/schema"
	"audit-system/ent/transaction"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescLastTransferTime is the schema descriptor for last_transfer_time field.
	accountDescLastTransferTime := accountFields[1].Descriptor()
	// account.DefaultLastTransferTime holds the default value on creation for the last_transfer_time field.
	account.DefaultLastTransferTime = accountDescLastTransferTime.Default.(func() time.Time)
	auditlogFields := schema.AuditLog{}.Fields()
	_ = auditlogFields
	// auditlogDescTimestamp is the schema descriptor for timestamp field.
	auditlogDescTimestamp := auditlogFields[1].Descriptor()
	// auditlog.DefaultTimestamp holds the default value on creation for the timestamp field.
	auditlog.DefaultTimestamp = auditlogDescTimestamp.Default.(func() time.Time)
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescTimestamp is the schema descriptor for timestamp field.
	transactionDescTimestamp := transactionFields[1].Descriptor()
	// transaction.DefaultTimestamp holds the default value on creation for the timestamp field.
	transaction.DefaultTimestamp = transactionDescTimestamp.Default.(func() time.Time)
}
