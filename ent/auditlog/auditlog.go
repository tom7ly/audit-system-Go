// Code generated by ent, DO NOT EDIT.

package auditlog

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the auditlog type in the database.
	Label = "audit_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldClientID holds the string denoting the client_id field in the database.
	FieldClientID = "client_id"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// FieldEntity holds the string denoting the entity field in the database.
	FieldEntity = "entity"
	// FieldMutation holds the string denoting the mutation field in the database.
	FieldMutation = "mutation"
	// FieldBefore holds the string denoting the before field in the database.
	FieldBefore = "before"
	// FieldAfter holds the string denoting the after field in the database.
	FieldAfter = "after"
	// Table holds the table name of the auditlog in the database.
	Table = "audit_logs"
)

// Columns holds all SQL columns for auditlog fields.
var Columns = []string{
	FieldID,
	FieldClientID,
	FieldTimestamp,
	FieldEntity,
	FieldMutation,
	FieldBefore,
	FieldAfter,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTimestamp holds the default value on creation for the "timestamp" field.
	DefaultTimestamp func() time.Time
)

// OrderOption defines the ordering options for the AuditLog queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByClientID orders the results by the client_id field.
func ByClientID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldClientID, opts...).ToFunc()
}

// ByTimestamp orders the results by the timestamp field.
func ByTimestamp(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTimestamp, opts...).ToFunc()
}

// ByEntity orders the results by the entity field.
func ByEntity(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEntity, opts...).ToFunc()
}

// ByMutation orders the results by the mutation field.
func ByMutation(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMutation, opts...).ToFunc()
}
